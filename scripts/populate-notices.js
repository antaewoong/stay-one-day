#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = 'https://fcmauibvdqbocwhloqov.supabase.co'
const supabaseKey = '[REMOVED_SUPABASE_SERVICE_KEY]'

const supabase = createClient(supabaseUrl, supabaseKey)

async function populateNotices() {
  try {
    console.log('üìù Populating notices table with sample data...\n')
    
    // Í∏∞Ï°¥ ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ïÎ¶¨
    await supabase.from('notices').delete().eq('title', 'Test Notice')
    
    // Ïã§Ï†ú Í≥µÏßÄÏÇ¨Ìï≠ Îç∞Ïù¥ÌÑ∞
    const notices = [
      {
        title: 'ÏãúÏÑ§Í∞ÄÍ≤© Î™®ÎãàÌÑ∞ÎßÅ ÌåÄÏû• ÏöîÏ≤≠',
        content: 'ÏãúÏÑ§ Í∞ÄÍ≤© Î™®ÎãàÌÑ∞ÎßÅ Í¥ÄÎ†® ÏóÖÎ¨¥ Ï°∞Ïú®Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§. Í∞Å ÏàôÏÜåÎ≥Ñ Í∞ÄÍ≤© Î≥ÄÎèô ÏÇ¨Ìï≠ÏùÑ Ï†êÍ≤ÄÌï¥ Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.',
        notice_type: 'general',
        target_audience: 'hosts',
        is_pinned: false,
        is_popup: false,
        status: 'published',
        view_count: 10
      },
      {
        title: '[Í≥µÏßÄ] ÎåÄÍ∏∞ÏóÖ ÎåÄÏÉÅ 10% Ìï†Ïù∏Ïú®Î°ú ÌôçÎ≥¥Ï§ÄÎπÑ',
        content: 'ÎåÄÍ∏∞ÏóÖ Í≥†Í∞ù ÎåÄÏÉÅ ÌäπÎ≥Ñ Ìï†Ïù∏ ÌîÑÎ°úÎ™®ÏÖòÏùÑ Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§. Í¥ÄÎ†® ÏàôÏÜå Îì±Î°ù Î∞è Ï§ÄÎπÑÏÇ¨Ìï≠ÏùÑ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.',
        notice_type: 'announcement',
        target_audience: 'all',
        is_pinned: true,
        is_popup: true,
        status: 'published',
        view_count: 17
      },
      {
        title: '[Í≥µÏßÄ] Ïõî Ï†ïÍ∏∞ Ï†êÍ≤Ä ÏïàÎÇ¥',
        content: 'Îß§Ïõî Ï†ïÍ∏∞ ÏãúÏä§ÌÖú Ï†êÍ≤ÄÏù¥ ÏòàÏ†ïÎêòÏñ¥ ÏûàÏäµÎãàÎã§. Ï†êÍ≤Ä ÏãúÍ∞Ñ ÎèôÏïà ÏÑúÎπÑÏä§ Ïù¥Ïö©Ïóê Ï†úÌïúÏù¥ ÏûàÏùÑ Ïàò ÏûàÏäµÎãàÎã§.',
        notice_type: 'maintenance',
        target_audience: 'all',
        is_pinned: true,
        is_popup: false,
        status: 'published',
        view_count: 14
      },
      {
        title: '[ÏãúÏä§ÌÖú] ÏÉàÎ°úÏö¥ ÏòàÏïΩ Í¥ÄÎ¶¨ Í∏∞Îä• ÏóÖÎç∞Ïù¥Ìä∏',
        content: 'ÏòàÏïΩ Í¥ÄÎ¶¨ ÏãúÏä§ÌÖúÏóê ÏÉàÎ°úÏö¥ Í∏∞Îä•Ïù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§. ÎåÄÏãúÎ≥¥ÎìúÏóêÏÑú ÌôïÏù∏Ìï¥ Î≥¥ÏÑ∏Ïöî.',
        notice_type: 'update',
        target_audience: 'hosts',
        is_pinned: false,
        is_popup: false,
        status: 'published',
        view_count: 8
      },
      {
        title: 'Í≥†Í∞ù Î¨∏Ïùò ÏùëÎãµ Í∞ÄÏù¥ÎìúÎùºÏù∏ Î≥ÄÍ≤Ω',
        content: 'Í≥†Í∞ù Î¨∏Ïùò ÏùëÎãµ Ïãú ÏÉàÎ°úÏö¥ Í∞ÄÏù¥ÎìúÎùºÏù∏Ïù¥ Ï†ÅÏö©Îê©ÎãàÎã§. Ï≤®Î∂ÄÎêú Îß§Îâ¥ÏñºÏùÑ Ï∞∏Í≥†Ìï¥ Ï£ºÏÑ∏Ïöî.',
        notice_type: 'guideline',
        target_audience: 'hosts',
        is_pinned: false,
        is_popup: false,
        status: 'published',
        view_count: 12
      }
    ]
    
    console.log(`Inserting ${notices.length} notices...`)
    
    const { data, error } = await supabase
      .from('notices')
      .insert(notices)
      .select()
    
    if (error) {
      console.error('‚ùå Insert error:', error.message)
      return
    }
    
    console.log('‚úÖ Successfully inserted notices:')
    data.forEach((notice, index) => {
      console.log(`   ${index + 1}. ${notice.title} (${notice.view_count} views)`)
    })
    
    console.log('\nüìä Checking total notices count...')
    
    const { count } = await supabase
      .from('notices')
      .select('*', { count: 'exact', head: true })
    
    console.log(`   Total notices in database: ${count}`)
    
    console.log('\n‚úÖ Notices population completed!')
    
  } catch (error) {
    console.error('‚ùå Error:', error.message)
  }
}

populateNotices()